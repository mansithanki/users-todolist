// Generated by ReScript, PLEASE EDIT WITH CARE
'use client';

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";

var initialState_todoList = [];

var initialState = {
  todoList: initialState_todoList,
  inputValue: ""
};

function reducer(state, action) {
  if (typeof action === "number") {
    if (action === /* AddTodo */0) {
      return {
              todoList: state.todoList.concat([{
                      id: state.todoList.length + 200 | 0,
                      title: state.inputValue,
                      isDone: false
                    }]),
              inputValue: ""
            };
    } else {
      return {
              todoList: [],
              inputValue: state.inputValue
            };
    }
  }
  if (action.TAG === /* InputChanged */0) {
    return {
            todoList: state.todoList,
            inputValue: action._0
          };
  }
  var index = action._0;
  return {
          todoList: Belt_Array.mapWithIndex(state.todoList, (function (i, todo) {
                  if (i === index) {
                    return {
                            id: todo.id,
                            title: todo.title,
                            isDone: !todo.isDone
                          };
                  } else {
                    return todo;
                  }
                })),
          inputValue: state.inputValue
        };
}

function Todoapp(props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var handleInput = function (e) {
    var newValue = e.target.value;
    Curry._1(dispatch, {
          TAG: /* InputChanged */0,
          _0: newValue
        });
  };
  return React.createElement("div", {
              className: "App bg-gray-200 min-h-screen flex flex-col items-center justify-center"
            }, React.createElement("h1", {
                  className: "text-2xl mb-4 inline-block"
                }, "Todo Items"), React.createElement("input", {
                  className: "border border-gray-800 rounded px-2 py-1 mb-2",
                  type: "text",
                  value: state.inputValue,
                  onChange: handleInput
                }), React.createElement("div", {
                  className: "inline-block"
                }, React.createElement("button", {
                      className: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded m-1",
                      onClick: (function (param) {
                          Curry._1(dispatch, /* AddTodo */0);
                        })
                    }, "ADD"), React.createElement("button", {
                      className: "bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 border border-red-700 rounded m-1",
                      onClick: (function (param) {
                          Curry._1(dispatch, /* ClearTodos */1);
                        })
                    }, "CLEAR LIST")), React.createElement("div", {
                  className: "w-screen mx-4 flex flex-wrap m-2"
                }, Belt_Array.mapWithIndex(state.todoList, (function (i, todo) {
                        return React.createElement("div", {
                                    key: String(todo.id),
                                    className: "flex items-center " + (
                                      todo.isDone ? "bg-green-500 line-through" : "bg-blue-500"
                                    ) + " text-white px-4 py-2 mt-4 mx-4 text-lg w-full"
                                  }, React.createElement("input", {
                                        className: "mr-2 mt-1",
                                        checked: todo.isDone,
                                        type: "checkbox",
                                        onChange: (function (param) {
                                            Curry._1(dispatch, {
                                                  TAG: /* MarkDone */1,
                                                  _0: i
                                                });
                                          })
                                      }), React.createElement("div", {
                                        className: "inline-block ml-2 flex-grow whitespace-nowrap break-normal overflow-hidden overflow-ellipsis"
                                      }, React.createElement("div", {
                                            className: "todoid inline-block"
                                          }, todo.id), React.createElement("span", {
                                            className: "whitespace-nowrap break-normal overflow-hidden overflow-ellipsis"
                                          }, "   " + todo.title)));
                      }))));
}

var make = Todoapp;

export {
  initialState ,
  reducer ,
  make ,
}
/* react Not a pure module */
